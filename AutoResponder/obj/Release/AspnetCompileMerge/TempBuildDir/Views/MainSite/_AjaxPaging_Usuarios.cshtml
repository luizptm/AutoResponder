@model PagedList.IPagedList<AutoResponder.ViewModels.UsuariosVM>
@using AutoResponder.ViewModels;
@using GridMvc.Html;
@using GridMvc.Sorting;
@using PagedList;
@using PagedList.Mvc;

@{
    ViewBag.Title = "Usuários";
    ViewDataDictionary<UsuariosVM> dic = new ViewDataDictionary<UsuariosVM>();
}

@if (Model.Count() > 0)
{
    if (HttpContext.Current.Request.IsLocal)
    {
        @Html.Grid(Model).Named("dataGrid_usuarios").Columns(columns =>
        {
            columns.Add().Titled("Detalhes").Sanitized(false).Encoded(false)
                .RenderValueAs(o => Html.ActionLink("Detalhes", "UserDetails", new { Id = o.idUser }, new { @class = "btn btn-default", onclick = "javascript: return UserDetails(this);" }));
            columns.Add(m => m.idUser).Titled(ModelMetadata.FromLambdaExpression<UsuariosVM, int>(x => x.idUser, dic).DisplayName);
            columns.Add(m => m.FullName).Titled(ModelMetadata.FromLambdaExpression<UsuariosVM, string>(x => x.FullName, dic).DisplayName);
            columns.Add(m => m.Email).Titled(ModelMetadata.FromLambdaExpression<UsuariosVM, string>(x => x.Email, dic).DisplayName);
            columns.Add(m => m.EntryDate).Titled(ModelMetadata.FromLambdaExpression<UsuariosVM, DateTime>(x => x.EntryDate, dic).DisplayName);
            columns.Add(m => m.Unsubscribe).Titled(ModelMetadata.FromLambdaExpression<UsuariosVM, int>(x => x.Unsubscribe, dic).DisplayName);
            columns.Add(m => m.OpenMail).Titled(ModelMetadata.FromLambdaExpression<UsuariosVM, int>(x => x.OpenMail, dic).DisplayName);
            columns.Add(m => m.Bounce).Titled(ModelMetadata.FromLambdaExpression<UsuariosVM, int>(x => x.Bounce, dic).DisplayName);
            columns.Add(m => m.Click).Titled(ModelMetadata.FromLambdaExpression<UsuariosVM, int>(x => x.Click, dic).DisplayName);
        }).Sortable(false);
    }
    else
    {
        @Html.Grid(Model).Named("dataGrid_usuarios").Columns(columns =>
        {
            columns.Add(m => m.FullName).Titled(ModelMetadata.FromLambdaExpression<UsuariosVM, string>(x => x.FullName, dic).DisplayName);
            columns.Add(m => m.Email).Titled(ModelMetadata.FromLambdaExpression<UsuariosVM, string>(x => x.Email, dic).DisplayName);
            columns.Add(m => m.EntryDate).Titled(ModelMetadata.FromLambdaExpression<UsuariosVM, DateTime>(x => x.EntryDate, dic).DisplayName);
            columns.Add(m => m.Unsubscribe).Titled(ModelMetadata.FromLambdaExpression<UsuariosVM, int>(x => x.Unsubscribe, dic).DisplayName);
            columns.Add(m => m.OpenMail).Titled(ModelMetadata.FromLambdaExpression<UsuariosVM, int>(x => x.OpenMail, dic).DisplayName);
            columns.Add(m => m.Bounce).Titled(ModelMetadata.FromLambdaExpression<UsuariosVM, int>(x => x.Bounce, dic).DisplayName);
            columns.Add(m => m.Click).Titled(ModelMetadata.FromLambdaExpression<UsuariosVM, int>(x => x.Click, dic).DisplayName);
        }).Sortable(false);
    }
    <div>
        <br />
        Página @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) de @Model.PageCount
        @Html.PagedListPager((IPagedList)Model, page => Url.Action("Usuarios", 
            new { SendingList = ViewBag.SendingList, page, grid_column = ViewBag.grid_column, grid_dir = ViewBag.grid_dir, user_name = ViewBag.CurrentFilter }), 
            PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(PagedListRenderOptions.PageNumbersOnly, new AjaxOptions(){  HttpMethod = "GET", UpdateTargetId = "usuarios"}))
    </div>
}
else
{    
    <table class="table table-striped grid-table">
        <tr class="grid-empty-text">
            <td>Nenhum dado a ser exibido
            </td>
        </tr>
    </table>
}

<script src="~/Scripts/gridmvc.ajax.js"></script>
<script type="text/javascript">
    GridMvcAjax.demo.init(
    {
        updateGridAction: '@Url.Action("Usuarios")'
    });
</script>

<script>
    $(function () {
        if (pageGrids.dataGrid_usuarios != undefined) {
            pageGrids.dataGrid_usuarios.onRowSelect(function (e) {
                UserDetails(e.row.Id);
            });
        }
    });
</script>

<script type="text/javascript">
    /*
    var controller = "MainSite/Usuarios/";
    $(".grid-header-title").find('a').each(function () {
        $(this).attr('href', $(this).attr('href').replace(/grid-column/g, 'grid_column'));
        $(this).attr('href', $(this).attr('href').replace(/grid-dir/g, 'grid_dir'));
        $(this).attr("onclick", "javascript: renderSort('" + controller + $(this).attr('href') + "', $(this), 'envios');");
        $(this).attr("href", "javascript: void();");
    });
    */
    $("td[data-name='Unsubscribe']:contains('0')").html('<span class="glyphicon glyphicon-minus"></span>');
    $("td[data-name='OpenMail']:contains('0')").html('<span class="glyphicon glyphicon-minus"></span>');
    $("td[data-name='Bounce']:contains('0')").html('<span class="glyphicon glyphicon-minus"></span>');
    $("td[data-name='Click']:contains('0')").html('<span class="glyphicon glyphicon-minus"></span>');
</script>