@model AutoResponder.ViewModels.BR_AutoResponder_TemplateVM
@using System
@using System.Web
@using System.Web.Optimization

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
    @if (Model.Sequence == 0)
    {
        <h4 class="modal-title" id="title">Novo Template de Optin</h4>
    }
    else
    {
        <h4 class="modal-title" id="title">Novo Template</h4>
    }
</div>
@Scripts.Render("~/Scripts/jquery_min")
@Scripts.Render("~/Scripts/vendor_validation")
<script>
    $("form").validate({
        rules: {
            SendingListId: {
                required: true
            },
            Sequence: {
                required: true
            },
            Interval: {
                required: true
            },
            Sender: {
                required: true,
                email: true
            },
            Subject: {
                required: true
            },
            Body: {
                required: true
            }
        }
    });
</script>
@using (Ajax.BeginForm("", "", null, new AjaxOptions { HttpMethod = "POST" }, new { Id = "CreateTemplateForm", Role = "form" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    @Html.Hidden("Sender", AutoResponder.Library.Constants.DEFAULT_SENDER_EMAIL)

    <div class="modal-body">
        <span class="glyphicon glyphicon-asterisk small"></span> Campos obrigatórios
        <br/><br/>
        <div class="form-group">
            @Html.LabelFor(model => model.SendingListId)<span class="glyphicon glyphicon-asterisk small"></span>:
            @Html.DropDownList("SendingListIdShow", (SelectList)ViewBag.SendingListId, "- selecione -", new { disabled = "disabled", @class = "selectpicker" })
            @Html.HiddenFor(model => model.SendingListId)
            &nbsp;@Html.ValidationMessageFor(model => model.SendingListId)
            <script>
                var SendingList = $("#SendingList").val();
                $("#SendingListIdShow").val(SendingList);
                $("#SendingListId").val(SendingList);
                $("#SendingListIdShow").selectpicker();
            </script>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Sequence)<span class="glyphicon glyphicon-asterisk small"></span>:
            @Html.TextBox("Sequence", Model.Sequence, new { disabled = "disabled", type = "number", min = "0",  max = "999" })
            &nbsp;@Html.ValidationMessageFor(model => model.Sequence)
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Interval)<span class="glyphicon glyphicon-asterisk small"></span>:
            @Html.TextBox("Interval", "0", new { type = "number", min = "0",  max = "999" })
            &nbsp;@Html.ValidationMessageFor(model => model.Interval)
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Sender)<span class="glyphicon glyphicon-asterisk small"></span>:
            @Html.TextBox("Sender", AutoResponder.Library.Constants.DEFAULT_SENDER_EMAIL, new { disabled = "disabled" })
            &nbsp;@Html.ValidationMessageFor(model => model.Sender)
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Subject)<span class="glyphicon glyphicon-asterisk small"></span>:
            @Html.EditorFor(model => model.Subject)
            &nbsp;@Html.ValidationMessageFor(model => model.Subject)
        </div>
        <div>
            @Html.LabelFor(model => model.Body)<span class="glyphicon glyphicon-asterisk small"></span>:
            @Html.TextArea("Body", "", 20, 90, null)
            <script type="text/javascript">
                $(document).ready(function () {
                    loadCKEditor('Body', false);
                });
            </script>
            &nbsp;@Html.ValidationMessageFor(model => model.Body)
        </div>
    </div>
    <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">Fechar</button>
        <button type="button" class="btn btn-primary" onclick="javascript: CreateTemplate();">Salvar</button>
    </div>
    if (HttpContext.Current.Request.IsLocal)
    {
        <text>&nbsp;<br /><a class="btn btn-default load" href="#" onclick="javascript: ShowCreateTemplate());">refresh</a></text>
    }
}
